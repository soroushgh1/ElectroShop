generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  fullname String
  password String
  email_verified_at String?
  cart Cart? @relation
  itemcart Itemcart[]
  cartid Int? @unique
  orders Order[]
  created_at String
  updated_at String
}

model Product {
  id Int @id @default(autoincrement())
  name String
  code String @unique
  price Int
  description String
  picture String
  quantity Int
  category Category @relation(fields: [categoryid], references: [id])
  categoryid Int
  created_at String
  updated_at String
  discount discount? @relation(fields: [discountid], references: [id]) 
  discountid Int?
  orderitem OrderItem? @relation
  itemcart Itemcart[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  slug String @unique
  products Product[]
  created_at String
  updated_at String
}

model Itemcart {
  id Int @id @default(autoincrement())
  product Product @relation(fields: [productid], references: [id])
  productid Int
  quantity Int
  itemsprice Int
  cart Cart[] @relation("CartItem")
  user User @relation(fields: [userid], references: [id])
  userid Int
  created_at String
  updated_at String
}

model Cart {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userid], references: [id])
  userid Int @unique
  itemcart Itemcart[] @relation("CartItem")
  payprice Int @default(0)
  created_at String
  updated_at String
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userid], references: [id])
  userid Int
  order_status String
  total_amount Int
  address String
  created_at String
  updated_at String
  order_items OrderItem[]
  payment Payment? @relation
}

model OrderItem {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderid], references: [id])
  orderid Int
  product Product @relation(fields: [productid], references: [id])
  productid Int @unique
  quantity Int
  price Int
  created_at String
  updated_at String
}

model Payment {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderid], references: [id])
  orderid Int @unique
  payment_method String
  amount Int
  payment_status String 
  transaction_id String 
  created_at String 
  updated_at String
}

model discount {
  id Int @default(autoincrement()) @unique
  amount Int
  name String @unique
  expire String
  products Product[]
}